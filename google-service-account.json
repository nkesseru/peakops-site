// scripts/seed-firestore.mjs
import { initializeApp, cert } from "firebase-admin/app";
import { getFirestore, FieldValue } from "firebase-admin/firestore";

const {
  FIREBASE_PROJECT_ID,
  FIREBASE_CLIENT_EMAIL,
  FIREBASE_PRIVATE_KEY_BASE64,
} = process.env;

function die(msg) { console.error("❌", msg); process.exit(1); }

if (!FIREBASE_PROJECT_ID) die("Missing FIREBASE_PROJECT_ID");
if (!FIREBASE_CLIENT_EMAIL) die("Missing FIREBASE_CLIENT_EMAIL");
if (!FIREBASE_PRIVATE_KEY_BASE64) die("Missing FIREBASE_PRIVATE_KEY_BASE64");

let privateKey;
try {
  privateKey = Buffer.from(FIREBASE_PRIVATE_KEY_BASE64, "base64").toString("utf8");
  if (!privateKey.includes("BEGIN PRIVATE KEY")) die("Decoded key doesn't look like a private key. Re-check base64.");
} catch (e) {
  die("Could not base64-decode FIREBASE_PRIVATE_KEY_BASE64");
}

console.log("➡️  Project:", FIREBASE_PROJECT_ID);
console.log("➡️  Client :", FIREBASE_CLIENT_EMAIL);

initializeApp({ credential: cert({ projectId: FIREBASE_PROJECT_ID, clientEmail: FIREBASE_CLIENT_EMAIL.replace(/(^"|"$)/g,""), privateKey }) });
const db = getFirestore();

const nowISO = () => new Date().toISOString();
const id = (pfx) => `${pfx}_${Math.random().toString(36).slice(2, 8)}`;

const orgId  = "butler_pilot";
const siteId = "WA-CC-88312";
const jobId  = "WO-TEST001";

const seeds = {
  orgs: [{
    id: orgId, name: "Butler America Telecom – Pilot", status: "active",
    billing: { terms: "NET30", currency: "USD" },
    contacts: { primary: { name: "Chelsea", email: "chelsea@example.com" } },
    preferences: { timezone: "America/Los_Angeles", weekStartsOn: "Mon" }
  }],
  locations: [{
    id: siteId, orgId,
    meta: { title: "Crown Castle – Spokane Valley", address: { line1: "1234 Example Rd", city: "Spokane Valley", state: "WA", zip: "99206" }, lat: 47.673, lon: -117.239 },
    compliance: { permitsRequired: ["NTP","JHA"], clientIds: { crownCastle: "CC-88312" } },
    status: "active"
  }],
  users: [
    { id: "nick", orgId, name: "Nicholas Kesseru", email: "nick@peakops.example", roles: ["owner","admin"], active: true },
    { id: "eric", orgId, name: "Eric Dev",      email: "eric@peakops.example", roles: ["developer"], active: true }
  ],
  jobs: [{
    id: jobId, orgId, siteId,
    po: "PO-12345", scope: "Tower audit + photo capture + closeout docs",
    status: "scheduled", schedule: { targetStart: nowISO(), targetDue: nowISO() },
    budget: { laborHours: 8, materialsUSD: 150 }
  }],
  workOrders: [{
    id: jobId, orgId, siteId, jobId,
    tasks: [
      { code: "ARRIVE",  title: "Arrival + Site Check-in", status: "todo" },
      { code: "JHA",     title: "Job Hazard Analysis",     status: "todo" },
      { code: "PHOTOS",  title: "Photo set capture",       status: "todo" },
      { code: "CLOSEOUT",title: "Upload docs & email digest", status: "todo" }
    ],
    status: "open"
  }],
  events: [{
    id: id("evt"), orgId, siteId, jobId,
    type: "ingested", source: "email_intake", ts: nowISO(),
    actor: { type: "system", id: "ingestor" }, payload: { siteId }
  }],
  fieldForms: [{
    id: id("form"), orgId, siteId, jobId,
    formKey: "JHA_V1", version: 1, submittedAt: nowISO(), submittedBy: "tech_001",
    answers: { ppe: ["Gloves","Hardhat"], hazards: ["RF","Trip"] },
    attachments: [], status: "complete", quality: { score: 0.9, warnings: [] }
  }],
  flags: [{
    id: id("flag"), orgId, siteId, jobId,
    entityType: "job", entityId: jobId, severity: "yellow",
    reason: "Missing photo set: azimuth-120", origin: "auto",
    status: "open", createdAt: nowISO()
  }],
  photos: [{
    id: id("photo"), orgId, siteId, jobId,
    storagePath: "gs://peakops/photos/WO-TEST001/az120_001.jpg",
    tags: ["azimuth:120","antenna","closeout"], exif: { timestamp: nowISO(), device: "iPhone 15 Pro" },
    status: "indexed"
  }],
  settings: [
    { id: "global", features: { emailIntake: true, autoFlagging: true, digestEmails: true, budgets: true, invoicing: true }, analyticsWindows: { daily: true, weekly: true, monthly: true } },
    { id: `org_${orgId}`, orgId, defaultSeverities: { missRequiredPhoto: "yellow", safety: "red" }, reviewRecipients: ["ops@example.com"] }
  ],
  security: [{ id: `org_${orgId}`, orgId, webhooks: { emailIngestSecret: "replace_me", ghlSecret: "replace_me" }, apiKeys: [] }],

  // ---- FORCE the extended collections to exist with a doc each ----
  crews: [{
    id: "crew_001", orgId, name: "Northwest Field Team",
    members: [{ userId: "tech_001", role: "tech" }, { userId: "tech_002", role: "rigger" }],
    certifications: ["RF_AWARENESS","CLIMBING_L2"], active: true
  }],
  assets: [{
    id: "truck_17", orgId, type: "vehicle", label: "Ford F-150 #17",
    status: "active", lastServiceAt: nowISO()
  }],
  timeLogs: [{
    id: id("time"), orgId, siteId, jobId,
    userId: "tech_001", start: nowISO(), end: null, activity: "travel", source: "mobile"
  }],
  complianceRecords: [{
    id: id("cmp"), orgId, siteId, jobId, type: "permit", name: "NTP",
    status: "approved", filePath: "gs://peakops/permits/WO-TEST001/ntp.pdf",
    issuedAt: nowISO(), expiresAt: null
  }],
  invoices: [{
    id: "INV-0001", orgId, jobId, siteId, status: "draft",
    lineItems: [{ code: "LABOR", qty: 8, rate: 95, total: 760 }, { code: "MATERIAL", qty: 1, rate: 150, total: 150 }],
    subtotal: 910, tax: 0, total: 910, currency: "USD"
  }],
  dailySnapshots: [{
    id: new Date().toISOString().slice(0,10), orgId, date: new Date().toISOString().slice(0,10),
    scheduledShifts: 3, completedShifts: 2, dcrCompletionPct: 0.67,
    flags: { green: 1, yellow: 1, red: 0 }, employeesWorked: 2, happiness: 4.6,
    budget: { on
